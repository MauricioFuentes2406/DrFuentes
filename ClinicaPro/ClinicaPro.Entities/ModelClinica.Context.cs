

//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------


namespace ClinicaPro.Entities
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class ClinicaDrFuentesEntities : DbContext
{
    public ClinicaDrFuentesEntities()
        : base("name=ClinicaDrFuentesEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<AntecedenteHereditario> AntecedenteHereditarios { get; set; }

    public virtual DbSet<AntecedentePersonalesPatologico> AntecedentePersonalesPatologicos { get; set; }

    public virtual DbSet<AntecedentesGinecoObstrectico> AntecedentesGinecoObstrecticos { get; set; }

    public virtual DbSet<BusquedaImagene> BusquedaImagenes { get; set; }

    public virtual DbSet<Busqueda> Busquedas { get; set; }

    public virtual DbSet<Cliente> Clientes { get; set; }

    public virtual DbSet<ColorPaciente> ColorPacientes { get; set; }

    public virtual DbSet<Consulta> Consultas { get; set; }

    public virtual DbSet<Consulta_RespuestasGenerales> Consulta_RespuestasGenerales { get; set; }

    public virtual DbSet<ConsultaAparatoDigestivo> ConsultaAparatoDigestivoes { get; set; }

    public virtual DbSet<ConsultaCraneo> ConsultaCraneos { get; set; }

    public virtual DbSet<ConsultaCuello> ConsultaCuelloes { get; set; }

    public virtual DbSet<ConsultaEstadoEmocional> ConsultaEstadoEmocionals { get; set; }

    public virtual DbSet<ConsultaEstadoVivienda> ConsultaEstadoViviendas { get; set; }

    public virtual DbSet<ConsultaEstadoViviendaMateriale> ConsultaEstadoViviendaMateriales { get; set; }

    public virtual DbSet<ConsultaExploracionFisica> ConsultaExploracionFisicas { get; set; }

    public virtual DbSet<ConsultaNariz> ConsultaNarizs { get; set; }

    public virtual DbSet<ConsultaOido> ConsultaOidos { get; set; }

    public virtual DbSet<ConsultaOjo> ConsultaOjos { get; set; }

    public virtual DbSet<ConsultaParesCraneale> ConsultaParesCraneales { get; set; }

    public virtual DbSet<ConsultaReflejo> ConsultaReflejos { get; set; }

    public virtual DbSet<ConsultaSensibilidad> ConsultaSensibilidads { get; set; }

    public virtual DbSet<ConsultaToraxPulmone> ConsultaToraxPulmones { get; set; }

    public virtual DbSet<CoordinacionyMarcha> CoordinacionyMarchas { get; set; }

    public virtual DbSet<EscalaTiempo> EscalaTiempoes { get; set; }

    public virtual DbSet<ExamenesResultado> ExamenesResultadoes { get; set; }

    public virtual DbSet<ExploracionMano> ExploracionManos { get; set; }

    public virtual DbSet<Familiar> Familiars { get; set; }

    public virtual DbSet<GeneralTipoServicio> GeneralTipoServicios { get; set; }

    public virtual DbSet<InventarioMedicina> InventarioMedicinas { get; set; }

    public virtual DbSet<sysdiagram> sysdiagrams { get; set; }

    public virtual DbSet<TipoAlergia> TipoAlergias { get; set; }

    public virtual DbSet<ExpedienteT> ExpedienteTs { get; set; }

    public virtual DbSet<Vista_TiposAlergia_comboBox> Vista_TiposAlergia_comboBox { get; set; }

    public virtual DbSet<ClienteAlergia> ClienteAlergias { get; set; }

    public virtual DbSet<AntecedenteAlcohol> AntecedenteAlcohol { get; set; }

    public virtual DbSet<AntecedenteDrogra> AntecedenteDrogra { get; set; }

    public virtual DbSet<AntecedenteTabaco> AntecedenteTabaco { get; set; }

    public virtual DbSet<AntecedenteVacuna> AntecedenteVacuna { get; set; }

    public virtual DbSet<Drogas> Drogas { get; set; }

    public virtual DbSet<Vacunas> Vacunas { get; set; }

    public virtual DbSet<GlasgowResultado> GlasgowResultado { get; set; }

    public virtual DbSet<ConsultaAbdomen> ConsultaAbdomen { get; set; }

    public virtual DbSet<VistaAntecedentesPatologicos> VistaAntecedentesPatologicos { get; set; }

    public virtual DbSet<VistaAntecedenteHereditario> VistaAntecedenteHereditario { get; set; }

    public virtual DbSet<VistaExploracionFisica> VistaExploracionFisica { get; set; }

    public virtual DbSet<VistaConsulta> VistaConsulta { get; set; }

    public virtual DbSet<VistaServicios> VistaServicios { get; set; }

    public virtual DbSet<VistaDrogas> VistaDrogas { get; set; }

    public virtual DbSet<VistaVacunas> VistaVacunas { get; set; }

    public virtual DbSet<VistaAlchol> VistaAlchol { get; set; }

    public virtual DbSet<VistaTabaco> VistaTabaco { get; set; }

    public virtual DbSet<VistaEstadoVivienda> VistaEstadoVivienda { get; set; }

    public virtual DbSet<VistaToraxPulmones> VistaToraxPulmones { get; set; }

    public virtual DbSet<ConsultaBoca> ConsultaBocas { get; set; }

    public virtual DbSet<VistaClienteAlergias> VistaClienteAlergiasSet { get; set; }

    public virtual DbSet<CategoriaIngreso> CategoriaIngresoes { get; set; }

    public virtual DbSet<CategoriasGasto> CategoriasGastoes { get; set; }

    public virtual DbSet<FuenteIngreso> FuenteIngresoes { get; set; }

    public virtual DbSet<Gasto> Gastos { get; set; }

    public virtual DbSet<Ingreso> Ingresos { get; set; }

    public virtual DbSet<VistaGasto> VistaGasto { get; set; }

    public virtual DbSet<VistaIngreso> VistaIngreso { get; set; }

    public virtual DbSet<Seguimiento> Seguimiento { get; set; }

    public virtual DbSet<VistaSeguimiento> VistaSeguimiento { get; set; }

    public virtual DbSet<Citas> Citas { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    public virtual DbSet<TipoUsuario> TipoUsuario { get; set; }

    public virtual DbSet<VistaCorreos> VistaCorreos { get; set; }

    public virtual DbSet<Notificaciones> Notificaciones { get; set; }

    public virtual DbSet<ExamenEstado> ExamenEstado { get; set; }

    public virtual DbSet<Examenes> Examenes { get; set; }

    public virtual DbSet<TipoExamenes> TipoExamenes { get; set; }

    public virtual DbSet<ClienteImagenesExamenesComplementarios> ClienteImagenesExamenesComplementarios { get; set; }

    public virtual DbSet<ElectroResultados> ElectroResultados { get; set; }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }


    public virtual ObjectResult<Droga_ListarConsultasRelacionadas_Result> Droga_ListarConsultasRelacionadas(Nullable<int> idDroga)
    {

        var idDrogaParameter = idDroga.HasValue ?
            new ObjectParameter("idDroga", idDroga) :
            new ObjectParameter("idDroga", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Droga_ListarConsultasRelacionadas_Result>("Droga_ListarConsultasRelacionadas", idDrogaParameter);
    }


    public virtual ObjectResult<sp_Droga_ListarConsultasRelacionadas_Result> sp_Droga_ListarConsultasRelacionadas(Nullable<int> idDroga)
    {

        var idDrogaParameter = idDroga.HasValue ?
            new ObjectParameter("idDroga", idDroga) :
            new ObjectParameter("idDroga", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Droga_ListarConsultasRelacionadas_Result>("sp_Droga_ListarConsultasRelacionadas", idDrogaParameter);
    }


    public virtual ObjectResult<sp_VacunaListarConsultasRelacionadas_Result> sp_VacunaListarConsultasRelacionadas(Nullable<int> idVacuna)
    {

        var idVacunaParameter = idVacuna.HasValue ?
            new ObjectParameter("IdVacuna", idVacuna) :
            new ObjectParameter("IdVacuna", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VacunaListarConsultasRelacionadas_Result>("sp_VacunaListarConsultasRelacionadas", idVacunaParameter);
    }


    public virtual ObjectResult<sp_IngresoGastosUltimos_10_Result> sp_IngresoGastosUltimos_10(Nullable<int> tipoUsuario)
    {

        var tipoUsuarioParameter = tipoUsuario.HasValue ?
            new ObjectParameter("TipoUsuario", tipoUsuario) :
            new ObjectParameter("TipoUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_IngresoGastosUltimos_10_Result>("sp_IngresoGastosUltimos_10", tipoUsuarioParameter);
    }


    public virtual ObjectResult<Nullable<int>> isCitasColicionan(Nullable<System.DateTime> fechaDesde, Nullable<System.TimeSpan> fechaHasta)
    {

        var fechaDesdeParameter = fechaDesde.HasValue ?
            new ObjectParameter("fechaDesde", fechaDesde) :
            new ObjectParameter("fechaDesde", typeof(System.DateTime));


        var fechaHastaParameter = fechaHasta.HasValue ?
            new ObjectParameter("fechaHasta", fechaHasta) :
            new ObjectParameter("fechaHasta", typeof(System.TimeSpan));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("isCitasColicionan", fechaDesdeParameter, fechaHastaParameter);
    }


    public virtual ObjectResult<SpReporteConsultaGananciaTotal_Result> SpReporteConsultaGananciaTotal()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteConsultaGananciaTotal_Result>("SpReporteConsultaGananciaTotal");
    }


    public virtual ObjectResult<SpReporteConsultasCantidadTotal_Result> SpReporteConsultasCantidadTotal()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteConsultasCantidadTotal_Result>("SpReporteConsultasCantidadTotal");
    }


    public virtual ObjectResult<SpReporteConsultaSexos_Result1> SpReporteConsultaSexos()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteConsultaSexos_Result1>("SpReporteConsultaSexos");
    }


    public virtual ObjectResult<SpReporteConsultaCantidadAnoActual1_Result> SpReporteConsultaCantidadAnoActual1()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteConsultaCantidadAnoActual1_Result>("SpReporteConsultaCantidadAnoActual1");
    }


    public virtual ObjectResult<SPReporteConsultaGananciaAnoActual1_Result> SPReporteConsultaGananciaAnoActual1()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPReporteConsultaGananciaAnoActual1_Result>("SPReporteConsultaGananciaAnoActual1");
    }


    public virtual ObjectResult<SpReporteClienteLugares_Result> SpReporteClienteLugares()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteClienteLugares_Result>("SpReporteClienteLugares");
    }


    public virtual ObjectResult<SpReporteGastosAnoAnual_Result> SpReporteGastosAnoAnual(Nullable<int> tipoUsuario)
    {

        var tipoUsuarioParameter = tipoUsuario.HasValue ?
            new ObjectParameter("TipoUsuario", tipoUsuario) :
            new ObjectParameter("TipoUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteGastosAnoAnual_Result>("SpReporteGastosAnoAnual", tipoUsuarioParameter);
    }


    public virtual ObjectResult<SpReporteIngresoAnoActual_Result> SpReporteIngresoAnoActual(Nullable<int> tipoUsuario)
    {

        var tipoUsuarioParameter = tipoUsuario.HasValue ?
            new ObjectParameter("TipoUsuario", tipoUsuario) :
            new ObjectParameter("TipoUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteIngresoAnoActual_Result>("SpReporteIngresoAnoActual", tipoUsuarioParameter);
    }


    public virtual ObjectResult<SpReporteGastoTotal_Result> SpReporteGastoTotal(Nullable<int> tipoUsuario)
    {

        var tipoUsuarioParameter = tipoUsuario.HasValue ?
            new ObjectParameter("TipoUsuario", tipoUsuario) :
            new ObjectParameter("TipoUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteGastoTotal_Result>("SpReporteGastoTotal", tipoUsuarioParameter);
    }


    public virtual ObjectResult<SpReporteIngresoTotal_Result> SpReporteIngresoTotal(Nullable<int> tipoUsuario)
    {

        var tipoUsuarioParameter = tipoUsuario.HasValue ?
            new ObjectParameter("TipoUsuario", tipoUsuario) :
            new ObjectParameter("TipoUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteIngresoTotal_Result>("SpReporteIngresoTotal", tipoUsuarioParameter);
    }


    public virtual ObjectResult<SpReporteGastoUsoCategorias_Result> SpReporteGastoUsoCategorias(Nullable<int> tipoUsuario)
    {

        var tipoUsuarioParameter = tipoUsuario.HasValue ?
            new ObjectParameter("TipoUsuario", tipoUsuario) :
            new ObjectParameter("TipoUsuario", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteGastoUsoCategorias_Result>("SpReporteGastoUsoCategorias", tipoUsuarioParameter);
    }


    public virtual ObjectResult<SpReporteCitasCategoria_Result> SpReporteCitasCategoria()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteCitasCategoria_Result>("SpReporteCitasCategoria");
    }


    public virtual ObjectResult<SpReporteCitasTotal_Result> SpReporteCitasTotal()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpReporteCitasTotal_Result>("SpReporteCitasTotal");
    }

}

}

